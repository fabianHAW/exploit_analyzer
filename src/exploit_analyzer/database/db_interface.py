from pymongo import MongoClient

from exploit_analyzer.config.config_parser import get_config_parser


class ExploitNotFoundError(Exception):
    pass


class MongoDBConnection(object):

    def __init__(self):
        self.parser = get_config_parser()
        self.client = MongoClient(self.parser.get('mongodb', 'url'))
        self.collection = self.client.exploitdb.exploits

    def get_all_exploits(self):
        return list(self.collection.find())

    def insert_exploits(self, data):
        self.collection.insert(data)

    def get_exploits_by_file_extension(self, extension):
        return self.collection.find(
            {'file': {'$regex': '.{}$'.format(extension)}})

    def update_exploit_by_filename(self, filename, update_dict):
        result = self.collection.update_one({
            'file': filename}, {
                '$set': update_dict})
        if result.matched_count == 0:
            raise ExploitNotFoundError(
                'Exploit with filename {} not found.'.format(filename))

    def close(self):
        self.client.close()
