# Informations for analyzing
# comment_tags: Terms to search for in comments.
# comment_group_tags: Terms to search for specific group names in comments.
# code_tags: Terms which are used to search for in code.
[analyzer]
comment_tags = software link,vendor homepage,vendor,tested version,version,tested on,steps to reproduce,google dork,usage,example,reference,md5,contact,github,website,email,e-mail,irc
comment_group_tags = milw0rm.com
code_tags = analyzed_port,user-agent,payload,content-type,help_parser_arg,py_imports

# Information about ExploitDB git Repo.
# local_git: Path to the local git repo.
# remote_git: Remote URL to ExploitDB repo.
# exploits_csv_file: Filename of the ExploitDB CSV file.
[git]
local_git = test/data/exploitdb
remote_git = https://github.com/offensive-security/exploitdb.git
exploits_csv_file = files_exploits.csv

# MongoDB settings.
# url: URL to MongoDB instance.
[mongodb]
url = localhost:27017

# Filenames for the python test cases.
# read: Filename for the read_file test case in the separator test.
# write: Filename for the write_file test case in the separator test.
# sep_succ: Filename for the success test case in the separator test.
# sep_indent_err: Filename for the error test case in the separator test.
# comment_analyze: Filename for a comment anaylze.
# code_analyze: Filename for a code analyze.
[python-test-files]
read = read_python.py
write = write_python.py
sep_succ = sep_python.py
sep_indent_err = sep_python_indent.py
comment_analyze = comment_analyze.py
code_analyze = code_analyze.py

# Separator config.
# type: Type of separator.
# comment_dir: Absolute path where to store the separated comments.
# code_dir: Absolute path where to store the separated code.
# quarantine_dir: Absolute path where to store the files which are failed to separate.
[separator]
type = python
comment_dir = test/data/comments
code_dir = test/data/code
quarantine_dir = test/data/quarantine
