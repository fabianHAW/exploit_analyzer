# Informations for analyzing
# comment_tags: Terms to search for in comments.
# comment_group_tags: Terms to search for specific group names in comments.
# code_tags: Terms which are used to search for in code.
[analyzer]
comment_tags = software link,vendor homepage,vendor,tested version,version,tested on,steps to reproduce,google dork,usage,example,reference,md5,contact,github,website,email,e-mail,irc
comment_group_tags = milw0rm.com
code_tags = analyzed-port,user-agent,payload,content-type,help-parser-arg,py-imports

# Information about ExploitDB git Repo.
# local_git: Path to the local git repo.
# remote_git: Remote URL to ExploitDB repo.
# exploits_csv_file: Filename of the ExploitDB CSV file.
[git]
local_git = data/exploitdb.git
remote_git = https://github.com/offensive-security/exploitdb.git
exploits_csv_file = files_exploits.csv

# Some logging config.
# exploitdb: Main logger name.
# parso: Parso logger name for separator component.
# database: Database logger name.
# misp: MISP integrator logger name.
# conf: Relativ logger config filepath.
[logging]
exploitdb = exploitdb
parso = parso
database = database
misp = misp
conf = conf/logging.cfg

# Config for MISP instance and misp event information.
# url: URL to MISP instance. (required)
# key: Authentication key for MISP access. (required)
# ssl: Enable/disable ssl for MISP REST connection.
# out_type: Output type for MISP responses.
# debug: Enable/disable debug.
# tag: Tag information for the exploitdb analyzer events in MISP. It has the form <tag-name>,<tag-colour>.
# distribution: Which distribution is used for MISP events. 0 := "Your organisation only", 1 := "This community only", 2 := "Connected communities", 3 := "All communities"
# taxonomies: Which taxonomies are used to tag new MISP events.
[misp]
url = http://localhost:8080
key = <misp-authentication-key>
ssl = True
out_type = json
debug = False
tag = exploitdb_analyzer,#13ede0
distribution = 0
taxonomies = CERT-XLM:intrusion-attempts="exploit-known-vuln",CERT-XLM:intrusion-attempts="new-attack-signature",cyber-threat-framework:Engagement="exploit-vulnerabilities",enisa:nefarious-activity-abuse="exploits-exploit-kits",europol-event:exploit-tool-exhausting-resources

# MongoDB settings.
# url: URL to MongoDB instance.
[mongodb]
url = localhost:27017

# Separator config.
# type: Type of separator.
# comment_dir: Relative path where to store the separated comments.
# code_dir: Relative path where to store the separated code.
# quarantine_dir: Relative path where to store the files which are failed to separate.
[separator]
type = python
comment_dir = data/comments
code_dir = data/code
quarantine_dir = data/quarantine

# Visualization settings.
# plot_dir: Relative path where to store the generated statistic images.
# start_yr: The year to start with some date related statistics.
# end_yr: The year to end with some date related statistics.
# color_map_extensions: Path to save the color map of extensions.
# color_map_years_: Path to save the color map of years.
# color_map_platforms: Path to save the color map of platforms.
# color_map_types: Path to save the color map of types.
[visualization]
plot_dir = data/assets/png
start_yr = 2009
end_yr = 2018
color_map_extensions = conf/color_map_extensions.json
color_map_years = conf/color_map_years.json
color_map_platforms = conf/color_map_platforms.json
color_map_types = conf/color_map_types.json
